name: test

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Install
      - name: Install mosquitto
        if: runner.os == 'macOS'
        run: brew install mosquitto

      - name: Generate certificates
        run: ./mosquitto/certs/generate.sh

      - name: Setup Swift
        uses: fwal/setup-swift@v1
        with:
          swift-version: "5.4.0"

      # Enable once macos-11 is available
      #- name: Setup Xcode
      #  if: runner.os == 'macOS'
      #  uses: maxim-lobanov/setup-xcode@v1
      #  with:
      #    xcode-version: '12.5'

      # Brokers
      - name: Run brokers
        if: runner.os == 'macOS'
        run: |
          mosquitto -d -c mosquitto/mosquitto-default.conf
          mosquitto -d -c mosquitto/mosquitto-authenticated.conf
          mosquitto -d -c mosquitto/mosquitto-limited.conf

      - name: Run brokers
        if: runner.os == 'Linux'
        run: docker-compose up -d

      # Test
      - name: Run tests
        run: swift test --sanitize=thread

      # Enable once macos-11 is available
      #- name: Run iOS tests
      #  if: runner.os == 'macOS'
      #  run: xcodebuild test -scheme mqtt-nio -sdk iphonesimulator -destination 'name=Any iOS Simulator Device`'
